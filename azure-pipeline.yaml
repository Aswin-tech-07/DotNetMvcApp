trigger:
  branches:
    include:
      - development
      - main

pool:
  name: Default
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: 'fa3d828d-33e8-42d6-8e6c-fd1a4cec5263'
  imageRepository: 'aswintechdotnetmvcapp'
  containerRegistry: 'dotnetmvcapp.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  azureConnectionName: 'DotNetMvcAppResourceConnection'
  developmentAppService: 'DotNetMvcAppDev'
  productionAppService: 'DotNetMvcAppProd'

stages:
- stage: Build
  jobs:
  - job: BuildDockerImage
    pool:
      name: Default
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        sudo systemctl status docker
        sudo systemctl start docker
        sudo systemctl enable docker
        sudo docker run hello-world
      displayName: 'Start Docker Daemon'
    - task: Docker@2
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        command: 'login'
    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        command: 'buildAndPush'
        dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)
        addPipelineData: true

- stage: DeployToDevelopment
  dependsOn: Build
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/development')
  jobs:
  - job: DeployDevelopment
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Deploy to Development App Services'
      inputs:
        azureSubscription: $(azureConnectionName)
        appName: $(developmentAppService)
        imageName: $(imageRepository):$(Build.BuildId)
  

- stage: DeployToProd
  dependsOn: Build
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  jobs:
  - deployment: DeployProduction
    environment: 'Production'   # Reference the environment for approvals
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: 'Deploy to Production App Services'
            inputs:
              azureSubscription: $(azureConnectionName)
              appName: $(productionAppService)
              imageName: $(imageRepository):$(Build.BuildId)







