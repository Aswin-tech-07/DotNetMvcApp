trigger:
  branches:
    include:
      - development
      - main

pool:
  name: Default
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: 'fa3d828d-33e8-42d6-8e6c-fd1a4cec5263'
  imageRepository: 'aswintechdotnetmvcapp'
  containerRegistry: 'dotnetmvcapp.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  azureConnectionName: 'DotNetMvcAppResourceConnection'
  developmentAppService: 'DotNetMvcAppDev'
  productionAppService: 'DotNetMvcAppProd'

stages:
- stage: Build
  jobs:
  - job: BuildDockerImage
    pool:
      name: Default
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureWebAppContainer@1 # Description what the task will execute
      inputs:
        azureSubscription: 'DotNetMvcApp'
        appName: 'devops-course-webapp-test'
        containers: $(containerRegistry)/$(imageRepository):$(tag)

- stage: DeployToDevelopment
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/development'))
  jobs:
  - job: DeployDevelopment
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Deploy to Development App Services'
      inputs:
        azureSubscription: $(azureConnectionName)
        appName: $(developmentAppService)
        imageName: $(imageRepository):$(Build.BuildId)
  

- stage: DeployToProd
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployProduction
    environment: 'Production'   # Reference the environment for approvals
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            displayName: 'Deploy to Production App Services'
            inputs:
              azureSubscription: $(azureConnectionName)
              appName: $(productionAppService)
              imageName: $(imageRepository):$(Build.BuildId)







